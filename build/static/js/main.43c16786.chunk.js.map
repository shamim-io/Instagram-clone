{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","user","username","caption","imageurl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","setUrl","progress","setProgress","setCaption","max","Input","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","email","setEmail","password","setPassword","setUsername","setUser","React","modalStyle","classes","onAuthStateChanged","authUser","updateProfile","orderBy","id","post","Modal","onClose","style","Name","createUserWithEmailAndPassword","catch","alert","message","signInWithEmailAndPassword","signOut","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43c16786.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp ({\r\n    apiKey: \"AIzaSyDych6lb1xLore2-c79bhuRabuQqMawlj0\",\r\n    authDomain: \"instagram-clone-5b047.firebaseapp.com\",\r\n    databaseURL: \"https://instagram-clone-5b047-default-rtdb.firebaseio.com\",\r\n    projectId: \"instagram-clone-5b047\",\r\n    storageBucket: \"instagram-clone-5b047.appspot.com\",\r\n    messagingSenderId: \"399922882341\",\r\n    appId: \"1:399922882341:web:0b41174e73c3ff2ac6dccc\",\r\n    measurementId: \"G-SFQBZD8K8R\"\r\n})\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage}","import React, { useState, useEffect } from 'react'\r\nimport './Post.css'\r\nimport { db } from './firebase'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport firebase from 'firebase';\r\n\r\nfunction Post({ postId, user, username, caption, imageurl }) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('')\r\n\r\n     useEffect(() => {\r\n         let unsubscribe;\r\n         if (postId) {\r\n             unsubscribe = db\r\n                .collection('posts')\r\n                .doc(postId)\r\n                .collection('comments')\r\n                \r\n                .onSnapshot((snapshot) => {\r\n                    setComments(snapshot.docs.map((doc) => doc.data()))\r\n                })\r\n         }\r\n         return () => {\r\n            unsubscribe();\r\n         }\r\n     }, [postId])\r\n\r\n     const postComment = (event) => {\r\n        event.preventDefault()\r\n\r\n        db.collection('posts').doc(postId).collection('comments').add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setComment('')\r\n     }\r\n\r\n    return (\r\n        <div className = 'post'>\r\n            <div className = \"post__header\">\r\n            <Avatar\r\n                className = \"post__avatar\"\r\n                alt = {username}\r\n                src = \"\"\r\n            />\r\n            <h3> {username}</h3>\r\n            </div>\r\n            {/*head -> avatar*/}\r\n\r\n            <img className = \"post__image\" src = {imageurl} alt = \"post\"/>\r\n            <h4 className = \"post__text\"><strong> {username} </strong>{caption} </h4>\r\n            {/*username + caption*/}\r\n\r\n            <div className=\"post__comments\">\r\n                {comments.map((comment) => (\r\n                    <p>\r\n                        <strong>{comment.username}</strong> {comment.text}\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            {user && (\r\n            <form className = \"post__commentBox\">\r\n                <input\r\n                    className = \"post__input\"\r\n                    type = 'text'\r\n                    placeholder = 'Add a comment .....'\r\n                    value = {comment}\r\n                    onChange = {(e) => setComment(e.target.value)}\r\n                />\r\n                <button\r\n                    className = \"post__button\"\r\n                    disabled = {!comment}\r\n                    type = 'submit'\r\n                    onClick = {postComment}\r\n                    >\r\n                        Post\r\n                    </button>\r\n            </form>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\nimport \"./ImageUpload.css\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\n\r\nconst ImageUpload = ({ username }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [caption, setCaption] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // progress function ...\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        // Error function ...\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ...\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n\r\n            // post image inside db\r\n            db.collection(\"posts\").add({\r\n              imageurl: url,\r\n              caption: caption,\r\n              username: username,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n\r\n            setProgress(0);\r\n            setCaption(\"\");\r\n            setImage(null);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"imageupload\">\r\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n      <Input\r\n        placeholder=\"Enter a caption\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n      <div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <Button className=\"imageupload__button\" onClick={handleUpload}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;","import './App.css';\r\nimport Post from './Post'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { db, auth } from  './firebase'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Input } from '@material-ui/core';\r\nimport ImageUpload from './ImageUpload';\r\nimport InstagramEmbed from \"react-instagram-embed\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\n// copied from material ui\r\nfunction getModalStyle() {\r\n  const top = 50 ;\r\n  const left = 50 ;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\n// copied from material ui\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([])\r\n  const [open, setOpen] = useState(false);\r\n  const [openSignIn, setOpenSignIn] = useState(false)\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  \r\n  //copied from material ui\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const classes = useStyles();\r\n\r\n  // any time any changes happens with the user. this useeffect changes\r\n  useEffect(() => {\r\n    const unsubscribe  = auth.onAuthStateChanged((authUser) => {\r\n      if(authUser) {\r\n        //user has logged in...\r\n        console.log(authUser)\r\n        setUser(authUser)\r\n          if(authUser.displayName) {\r\n            // dont update username\r\n          }\r\n          else {\r\n            return authUser.updateProfile ({\r\n              displayName: username\r\n            })\r\n          }\r\n      }\r\n      else {\r\n        //user has logged out...\r\n        setUser(null)\r\n      }\r\n    })\r\n\r\n    // this snippet means whenever the user changes return the previous listener before firing the new useEffect listener.\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, [user, username])\r\n\r\n  useEffect(() => {\r\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n      setPosts(snapshot.docs.map(doc => ({\r\n        id: doc.id, \r\n        post:doc.data()\r\n      }) ));\r\n    })\r\n  }, [])\r\n\r\n  const signUp = (event) => {\r\n    event.preventDefault();\r\n\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n    .then((authUser) => {\r\n      return authUser.user.updateProfile({\r\n        displayName:username\r\n      })\r\n    })\r\n    .catch((error) => alert(error.message))\r\n  }\r\n\r\n  const signIn = (event) => {\r\n    event.preventDefault();\r\n\r\n    auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .catch((error) => alert(error.message))\r\n\r\n    setOpenSignIn(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n    <Modal\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n      <div style = {modalStyle} className = {classes.paper}>\r\n        <form Name = '' className = \"app__signup\">\r\n          <center>\r\n            <img\r\n              className = 'app__headerImage'\r\n              src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\r\n              alt = \"\" \r\n            />\r\n\r\n            <Input \r\n              placeholder = \"username\"\r\n              type = \"text\"\r\n              value = {username}\r\n              onChange = {(e) => setUsername(e.target.value)}/>\r\n\r\n\r\n            <Input \r\n              placeholder = \"email\"\r\n              type = \"text\"\r\n              value = {email}\r\n              onChange = {(e) => setEmail(e.target.value)}/>\r\n\r\n            <Input \r\n              placeholder = \"password\"\r\n              type = \"password\"\r\n              value = {password}\r\n              onChange = {(e) => setPassword(e.target.value)} />\r\n            <Button type = \"submit\" onClick = {signUp}> Signup </Button>\r\n          </center>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        open={openSignIn}\r\n        onClose={() => setOpenSignIn(false)}\r\n      >\r\n      <div style = {modalStyle} className = {classes.paper}>\r\n        <form className = \"form__signup\">\r\n          <center>\r\n            <img\r\n              className = 'app__headerImage'\r\n              src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\r\n              alt = \"\" \r\n            />\r\n            <Input \r\n              placeholder = \"email\"\r\n              type = \"text\"\r\n              value = {email}\r\n              onChange = {(e) => setEmail(e.target.value)}/>\r\n\r\n            <Input \r\n              placeholder = \"password\"\r\n              type = \"password\"\r\n              value = {password}\r\n              onChange = {(e) => setPassword(e.target.value)} />\r\n            <Button type = \"submit\" onClick = {signIn}> SignIn </Button>\r\n          </center>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <div className = \"app__header\">\r\n          <img src = \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\r\n            alt = \"\" \r\n            className = 'app__headerImage'/> \r\n\r\n        {user ? (\r\n          <Button onClick = {() => auth.signOut()}>Logout</Button>\r\n        ) : (\r\n\r\n          <div className = \"app__loginContainer\">\r\n            <Button onClick = {() => setOpenSignIn(true)}>Sign In</Button>\r\n            <Button onClick = {() => setOpen(true)}>Sign Up</Button>\r\n          </div>\r\n        )}\r\n        </div>\r\n\r\n        <div className=\"app__posts\">\r\n        <div className=\"app__postsLeft\">\r\n          <FlipMove>\r\n            {posts.map(({ id, post }) => (\r\n              <Post\r\n                user={user}\r\n                key={id}\r\n                postId={id}\r\n                username={post.username}\r\n                caption={post.caption}\r\n                imageurl={post.imageurl}\r\n              />\r\n            ))}\r\n          </FlipMove>\r\n        </div>\r\n        <div className=\"app__postsRight\">\r\n          <InstagramEmbed\r\n            url=\"https://www.instagram.com/p/B2G3iwRDc1c/\"\r\n            maxWidth={320}\r\n            hideCaption={false}\r\n            containerTagName=\"div\"\r\n            protocol=\"\"\r\n            injectScript\r\n            onLoading={() => {}}\r\n            onSuccess={() => {}}\r\n            onAfterRender={() => {}}\r\n            onFailure={() => {}}\r\n          />\r\n        </div>\r\n      </div>\r\n        \r\n          {user?.displayName ? (\r\n            <ImageUpload username = {user.displayName}/>\r\n              ) : (\r\n          <h3>Login to upload</h3>\r\n       )}\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}